##   CHECK COLORED, MULTILINE AND CASE INSESITIVE ACTIONS
## default color: [0;37m

#var Arg1Correct {123}
#var Arg2Correct {qwerty}
#var Arg3Correct {AAAA}
#var Args1Correct {$Arg1Correct.$Arg2Correct.$Arg3Correct}

#action smaug {/^&RFor test1: &garg1 = &O(.*)&B, Arg2 = &P(.*)&c, Arg3 = &W(.*)&w\./} {#var Arg1 {%%0}; #var Arg2 {%%1}; #var Arg3 {%%2}}
#var Arg1 0
#var Arg2 0
#var Arg3 0

#loopback {[1;31mFor [46mtest1: [0;32mar[0;32;40mg1 = [0;33m$Arg1Correct[1;34m, Arg2 = [1;35m$Arg2Correct[0;36m, Arg3 [43m= [1;37m$Arg3Correct[0;37m.}
#sync
#var Args1 {$Arg1.$Arg2.$Arg3}; assertEqual ACTIONS_COLORED Args1 Args1Correct
#loopback {[1;30mFor [46mtest1: [1;32mar[0;32;40mg1 = [0;33mArg1Correct[1;35m, Arg2 = [0;36mArg2Correct[0;31m, Arg3 [43m= [1;33mArg3Correct[0;37m.}
#sync
#var Args1 {$Arg1.$Arg2.$Arg3}; assertEqual ACTIONS_COLORED Args1 Args1Correct

#action sow {/^\{7\}For test2: \{2\}arg1 = \[1\](.*)\[2\],\nArg2 = \{1\}(.*)\{2\},\nArg3 = \{1\}(.*)\[7\]\./m} {#var Arg1 {%%0}; #var Arg2 {%%1}; #var Arg3 {%%2}}
#var Arg1 0
#var Arg2 0
#var Arg3 0

#loopback {fake prompt> $EOP}
#loopback {[1;37mFor [1;37mtest2: [1;32mar[1;32;40mg1 = [0;31m$Arg1Correct[0;32m,}
#loopback {Arg2 = [1;31m$Arg2Correct[1;32m,}
#loopback {Arg3 [1;32;43m= [1;31m$Arg3Correct[0;37m.}
#loopback {fake prompt> $EOP}
#sync
#var Args1 {$Arg1.$Arg2.$Arg3}; assertEqual ACTIONS_COLORED_MULTILINE Args1 Args1Correct
#loopback {fake prompt> $EOP}
#loopback {[1;37mFor [1;37mtest2: [1;32mar[1;32;40mg1 = [0;31mArg1Correct[0;32m,}
#loopback {fake prompt> $EOP}
#loopback {Arg2 = [1;31mArg2Correct[1;32m,}
#loopback {fake prompt> $EOP}
#loopback {Arg3 [1;32;43m= [1;31mArg3Correct[0;37m.}
#loopback {fake prompt> $EOP}
#sync
#var Args1 {$Arg1.$Arg2.$Arg3}; assertEqual ACTIONS_COLORED_MULTILINE Args1 Args1Correct

#action sow {/^\{7\}For tEst3: \{2\}aRg1 = \[1\](.*)\[2\], Arg2 = \{1\}(.*)\{2\}, arg3 = \{1\}(.*)\[7\]\./i} {#var Arg1 {%%0}; #var Arg2 {%%1}; #var Arg3 {%%2}}
#var Arg1 0
#var Arg2 0
#var Arg3 0

#loopback {[1;37mFor [1;37mteST3: [1;32mar[1;32;40mG1 = [0;31m$Arg1Correct[0;32m, Arg2 = [1;31m$Arg2Correct[1;32m, arG3 [1;32;43m= [1;31m$Arg3Correct[0;37m.}
#sync
#var Args1 {$Arg1.$Arg2.$Arg3}; assertEqual ACTIONS_COLORED_IGNORECASE Args1 Args1Correct
#loopback {$EOP[1;37mFor [1;37mteST3: [1;32mar[1;32;40mG1 = [0;31mArg1Correct[0;32m,$EOL Arg2 = [1;31mArg2Correct[1;32m,$EOL arG3 [1;32;43m= [1;31mArg3Correct[0;37m.$EOP}
#sync
#var Args1 {$Arg1.$Arg2.$Arg3}; assertEqual ACTIONS_COLORED_IGNORECASE Args1 Args1Correct

#action sow {/^\{7\}FoR test4: \{2\}arg1 = \[1\](.*)\[2\],\n arg2 = \{1\}(.*)\{2\},\n ArG3 = \{1\}(.*)\[7\]\./mi} {#var Arg1 {%%0}; #var Arg2 {%%1}; #var Arg3 {%%2}}
#var Arg1 0
#var Arg2 0
#var Arg3 0

#loopback {$EOP[1;37mFor [1;37mteST4: [1;32mar[1;32;40mG1 = [0;31m$Arg1Correct[0;32m,$EOL Arg2 = [1;31m$Arg2Correct[1;32m,$EOL arG3 [1;32;43m= [1;31m$Arg3Correct[0;37m.$EOP}
#sync
#var Args1 {$Arg1.$Arg2.$Arg3}; assertEqual ACTIONS_COLORED_MULTILINE_IGNORECASE Args1 Args1Correct
